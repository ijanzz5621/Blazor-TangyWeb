@page "/learnBlazor/bindProp"

@using Tangy_Models.LearnBlazorModels;

<h3>Bind Property</h3>

<div class="row border p-2">
    <h3 class="text-primary">Product</h3>

    <hr />

    <div>Name: @product.Name <br/></div>
    <div>Active: @product.IsActive <br/></div>
    <div>Price: @product.Price <br/></div>
    <div>This Product is: @(product.IsActive ? "Active" : "InActive") <br /></div>

    <br /><br />

    <hr />

    <br />

    <div>
        Property Selected: @selectedProp <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value: @product.ProductProperties?.FirstOrDefault(p => p.Key == selectedProp)?.Value </p>    
        }
    </div>

</div>

<br />

<div class="row border p-3">

    <h3 class="text-primary">Product Playground</h3>

    @*<input type="checkbox" @bind="@product.IsActive"  /> <br/>*@
    <div><input type="checkbox" @bind-value="@product.IsActive" checked=@(product.IsActive ? "checked" : null) /> <br/></div>
    <div>Price: <input type="number" @bind-value="@product.Price" @bind-value:event="oninput" /> <br /> <br/></div>
    @*Price: <input type="number" @bind="@product.Price" @bind:event="oninput" /> <br/> *@

    <div>Product Properties: 
        <select @bind="selectedProp">
            @foreach(Demo_ProductProp prop in product?.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>

</div>

@code {
    private string selectedProp = "";

    Demo_Product product = new()
    {
        Id = 1,
        Name = "Rose Candle",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<Demo_ProductProp>()
        {
            new Demo_ProductProp { Id = 1, Key = "Color", Value = "Black" },
            new Demo_ProductProp { Id = 2, Key = "Flavor", Value = "Rose Jasmine" },
            new Demo_ProductProp { Id = 3, Key = "Size", Value = "20oz" }
        }
    };

    //string? isProductActive; 
    //public BindProp()
    //{
    //    isProductActive = (product.IsActive) ? "Active" : "InActive";
    //}
}
